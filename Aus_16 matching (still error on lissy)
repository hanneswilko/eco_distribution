install.packages("haven")
library(haven)
install.packages("dplyr")
library(dplyr)
library(tidyverse)
install.packages("StatMatch")
library(StatMatch)
setwd("/Users/rainadasgupta/Desktop/Semester - 3/Distri R&P Aus")
US16 <- haven::read_dta("us16wp.dta")
load("~/Desktop/Semester - 3/Distri R&P Aus/AUS_AES data/2. Australian Election Study, 2016-4.RData")
# Assuming 'x' is 2016 AUS dataset
Aus_2016 <- x %>%
  select(B9_1, G3, G4, H1, H2, H17, B1)
Aus_2016<- Aus_2016 %>%
  rename(vote = B9_1,
         education = G3,
         employment = G4,
         gender = H1,
         age = H2,
         income = H17,
         party_pref = B1)
#left/center-left=1, right/center-right=0; varies/center=2;  
Aus_2016 <- Aus_2016 %>%
  mutate(vote = case_when(
    vote == 1 ~ 1,
    vote == 2 ~ 1,
    vote == 3 ~ 2,
    vote == 4 ~ 1,
    vote == 5 ~ 2,
    vote == 6 ~ 2,
    vote == 7 ~ 1,
    vote == 8 ~ 0,
    vote == 9 ~ 0,
    vote == 10 ~ 0,
    vote == 11 ~ 0,
    vote == 12 ~ 2,
    vote == 13 ~ 0,
    vote == 14 ~ 0,
    vote == 15 ~ 0,
    vote == 16 ~ 0,
    vote == 17 ~ 0,
    vote == 18 ~ 0,
    vote == 19 ~ 0,
    vote == 20 ~ 1,
    vote == 21 ~ 1,
    vote == 22 ~ 2,
    vote == 23 ~ 2,
    vote == 24 ~ 2,
    vote == 25 ~ 0,
    vote == 26 ~ 0,
    vote == 27 ~ 0,
    vote == 28 ~ 0,
    vote == 29 ~ 0,
    vote == 30 ~ 2,
    vote == 31 ~ 2,
    vote == 32 ~ 1,
    vote == 33 ~ 1,
    vote == 34 ~ 1,
    vote == 95 ~ 2,
    vote == 96 ~ 2,
    vote == 97 ~ 2,
    vote == 98 ~ 2,
    vote == 997 ~ NA,
    vote == 999 ~ NA,
    TRUE ~ vote
  ))


#merge of employment categories: employed = 1, unemployed = 0, not in labour force + homemaker + disabled = 3, retired = 4, education = 5, 8,999 = skipped
Aus_2016<- Aus_2016 %>%
  mutate(employment_new = case_when(
    employment %in% c(1, 2) ~ 1,
    employment %in% c(3, 4) ~ 0,
    employment %in% c(7) ~ 3,
    employment %in% c(5) ~ 4,
    employment %in% c(6) ~ 5,
    employment %in% 8 ~ NA_integer_,
    employment %in% 999 ~ NA_integer_,
    TRUE ~ employment 
  ))

# Merge on education categories; highest edu level: school; non-degree qualifications:2 ; UG degree: 3; PG degree/diploma: 4
Aus_2016 <- Aus_2016 %>%
  mutate(education_new = case_when(
    education %in% c(1) ~ 1,                      # No qualification since leaving school
    education %in% c(2) ~ 4,                         # Postgraduate Degree or Postgraduate Diploma
    education %in% c(3) ~ 3,                         # Bachelor Degree (including Honours)
    education %in% c(4) ~ 2,                         # Undergraduate Diploma
    education %in% c(5) ~ 2,                         # Associate Diploma
    education %in% c(6) ~ 2,                         # Trade qualification
    education %in% c(7) ~ 2,                         # Non trade qualification
    education %in% c(999) ~ NA_integer_,             
    TRUE ~ NA_integer_                               
  ))

install.packages("dplyr")
library(dplyr)
install.packages("lubridate")
library(lubridate)
birth_years <- Aus_2016$age
current_year_2016 <- 2016
Aus_2016$Age_2016 <- current_year_2016 - birth_years
Aus_2016$Age_2016[Aus_2016$Age_2016 > 100] <- NA

#Income quintiles, 1- lowest quintile ; 5- highest quintile
Aus_2016 <- Aus_2016 %>%
mutate(income = case_when(
  income %in% c(1, 2, 3, 4) ~ 1,
  income %in% c(5, 6, 7, 8, 9) ~ 2,
  income %in% c(10, 11, 12, 13) ~ 3,
  income %in% c(14, 15, 16, 17) ~ 4,
  income %in% c(18, 19, 20, 21, 22) ~ 5,
  income %in% c(999) ~ NA,
))

#partisanship, coded similarly like vote
Aus_2016 <- Aus_2016 %>%
  mutate(party_pref = case_when(
    party_pref == 1 ~ 1,
    party_pref == 2 ~ 1,
    party_pref == 3 ~ 2,
    party_pref == 4 ~ 1,
    party_pref == 5 ~ 2,
    party_pref == 6 ~ 2,
    party_pref == 7 ~ 1,
    party_pref == 8 ~ 0,
    party_pref == 9 ~ 0,
    party_pref == 10 ~ 0,
    party_pref == 11 ~ 0,
    party_pref == 12 ~ 2,
    party_pref == 13 ~ 0,
    party_pref == 14 ~ 0,
    party_pref == 15 ~ 0,
    party_pref == 16 ~ 0,
    party_pref == 17 ~ 0,
    party_pref == 18 ~ 0,
    party_pref == 19 ~ 0,
    party_pref == 20 ~ 1,
    party_pref == 21 ~ 1,
    party_pref == 22 ~ 2,
    party_pref == 23 ~ 2,
    party_pref == 24 ~ 2,
    party_pref == 25 ~ 0,
    party_pref == 26 ~ 0,
    party_pref == 27 ~ 0,
    party_pref == 28 ~ 0,
    party_pref == 29 ~ 0,
    party_pref == 30 ~ 2,
    party_pref == 31 ~ 2,
    party_pref == 32 ~ 1,
    party_pref == 33 ~ 1,
    party_pref == 34 ~ 1,
    party_pref == 95 ~ 2,
    party_pref == 96 ~ 2,
    party_pref == 97 ~ 2,
    party_pref == 98 ~ 2,
    party_pref == 997 ~ NA,
    party_pref== 999 ~ NA,
    TRUE ~ vote
  ))

Aus_2016 <- Aus_2016 %>%
  mutate_all(~ ifelse(. == 999, NA, .))

Aus_2016 <- Aus_2016 %>%
  select(-age, -employment, -education)
Aus_2016 <- Aus_2016 %>%
  rename(employment = employment_new,
         age= Age_2016 ,
         education = education_new
)

#cleaning lws data - US16

US16 <- US16 %>%
  select(pid, hid, age, educlev, ppopwgt, inum, sex, lfs, pilabour)

#re-coding education categories; highest edu level: school; non-degree qualifications:2 ; UG degree: 3; PG degree/diploma: 4
US16 <- US16 %>%
  mutate(
    education = case_when(
      educlev %in% c(100, 120, 130, 200, 210) ~ 1,
      educlev %in% c(220, 300, 311) ~ 2,
      educlev %in% c(310, 312) ~ 3,
      educlev %in% c(313, 320) ~ 4,
      TRUE ~ NA_integer_ 
    ))

#recoding employment levels;  employed = 1, unemployed = 0, not in labour force = 3, retired = 4, education = 5, diasabled = 6, homemaker = 7, 8.9,999 = skipped
US16<- US16 %>%
  mutate(employment = case_when(
    lfs %in% c(100) ~ 1,
    lfs %in% c(200) ~ 0,
    lfs %in% c(300, 330, 340) ~ 3,
    lfs %in% c(310) ~ 4,
    lfs %in% c(320) ~ 5,
    TRUE ~ NA_integer_ 
  ))

#renaming the gender variable
US16 <- US16 %>%
  rename(gender = sex)

#transforming income
US16<- US16[order(US16$pilabour), ]
quintile_breaks <- quantile(na.omit(US16$pilabour), probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
US16$quintile <- cut(US16$pilabour, breaks = quintile_breaks, labels = FALSE)
US16$income <- US16$quintile


# Removing rows with missing values in the 'education' column
Aus_2016<- Aus_2016[complete.cases(Aus_2016$education), ]
US16 <- US16[complete.cases(US16$education), ]

#removing rows with missing value in "income"
Aus_2016<- Aus_2016[complete.cases(Aus_2016$income), ]
US16 <- US16[complete.cases(US16$income), ]

#removing rows with missing value in "employment"
Aus_2016<- Aus_2016[complete.cases(Aus_2016$employment), ]
US16 <- US16[complete.cases(US16$employment), ]


#matching 
group.v <- c("employment","income","education")
rnd.1 <- RANDwNND.hotdeck(data.rec = US16, data.don = Aus_2016,
                          match.vars = NULL, don.class = group.v)
#The following donation classes: 3.1.3 in data.don are empty, i.e. there are no donors
Aus_2016$education <- ifelse(Aus_2016$employment == 3 & Aus_2016$income == 1 & Aus_2016$education == 3, 2, Aus_2016$education)
US16$education <- ifelse(US16$employment == 3 & US16$income == 1 & US16$education == 3, 2, US16$education)

group.v <- c("employment","income","education")
rnd.1 <- RANDwNND.hotdeck(data.rec = US16, data.don = Aus_2016,
                          match.vars = NULL, don.class = group.v)


fA.rnd.1 <- create.fused(data.rec = US16, data.don = Aus_2016,
                         mtc.ids = rnd.1$mtc.ids, z.vars = c("vote"))
